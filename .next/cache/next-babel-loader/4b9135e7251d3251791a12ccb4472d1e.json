{"ast":null,"code":"var _jsxFileName = \"/Users/kakao/Desktop/dev/node_bird/nodebird_front/components/PostCard.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback } from 'react';\nimport { Button, Icon, Card, Avatar, Form } from 'antd';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\n\nconst PostCard = ({\n  post\n}) => {\n  const {\n    0: commentFormOpened,\n    1: setCommentFormOpened\n  } = useState(false);\n  const {\n    0: commentText,\n    1: setCommentText\n  } = useState('');\n  const {\n    me\n  } = useSelector(state => state.user);\n  const dispatch = useDispatch();\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpened(prev => !prev);\n  }, []);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, __jsx(Card, {\n    key: +post.createdAt,\n    cover: post.img && __jsx(\"img\", {\n      alt: \"example\",\n      src: post.img,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }),\n    actions: [__jsx(Icon, {\n      type: \"retweet\",\n      key: \"retweet\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }), __jsx(Icon, {\n      type: \"heart\",\n      key: \"heart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }), __jsx(Icon, {\n      type: \"message\",\n      key: \"message\",\n      onClick: onToggleComment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }), __jsx(Icon, {\n      type: \"ellipsis\",\n      key: \"ellipsis\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    })],\n    extra: __jsx(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"follow\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, post.User.nickname[0]),\n    title: post.User.nickname,\n    description: post.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  })), commentFormOpened && __jsx(React.Fragment, null, __jsx(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, __jsx(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, __jsx(Input.TextArea, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }))), __jsx(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })));\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    User: PropTypes.object,\n    content: PropTypes.string,\n    img: PropTypes.string,\n    creatAt: PropTypes.object\n  })\n};\nexport default PostCard;","map":{"version":3,"sources":["/Users/kakao/Desktop/dev/node_bird/nodebird_front/components/PostCard.js"],"names":["React","useState","useCallback","Button","Icon","Card","Avatar","Form","PropTypes","useSelector","useDispatch","PostCard","post","commentFormOpened","setCommentFormOpened","commentText","setCommentText","me","state","user","dispatch","onToggleComment","prev","createdAt","img","User","nickname","content","propTypes","shape","object","string","creatAt"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { Button, Icon, Card, Avatar, Form } from 'antd';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\n\nconst PostCard = ({ post }) => {\n    const [commentFormOpened, setCommentFormOpened] = useState(false);\n    const [commentText, setCommentText] = useState('');\n    const { me } = useSelector(state => state.user);\n    const dispatch = useDispatch();\n\n    const onToggleComment = useCallback(() => {\n        setCommentFormOpened(prev => !prev);\n    }, []);\n\n    return (\n        <div>\n            <Card\n                key = {+post.createdAt}\n                cover = {post.img && <img alt=\"example\" src={post.img} />}\n                actions = {[\n                    <Icon type=\"retweet\" key=\"retweet\" />,\n                    <Icon type=\"heart\" key=\"heart\" />,\n                    <Icon type=\"message\" key=\"message\" onClick={onToggleComment} />,\n                    <Icon type=\"ellipsis\" key=\"ellipsis\" />,\n                ]}\n                extra={<Button>follow</Button>}\n            >\n                <Card.Meta\n                    avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\n                    title={post.User.nickname}\n                    description={post.content}\n                />\n            </Card>\n            {commentFormOpened && (\n                <>\n                    <Form >\n                        <Form.Item>\n                            <Input.TextArea />\n                        </Form.Item>\n                    </Form>\n                    <List />\n                </>\n            )}\n        </div>\n\n    );\n};\n\nPostCard.propTypes = {\n    post: PropTypes.shape({\n        User: PropTypes.object,\n        content: PropTypes.string,\n        img: PropTypes.string,\n        creatAt: PropTypes.object,\n    }),\n};\n\nexport default PostCard;"]},"metadata":{},"sourceType":"module"}