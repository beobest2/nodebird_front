{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport const initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: 'jaden'\n    },\n    content: 'first topic',\n    img: 'https://images.unsplash.com/photo-1576460303646-1b9493abfd35?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=934&q=80',\n    Commnets: []\n  }],\n  imagePaths: [],\n  // 미리보기 이미지 경로\n  addPostErrorReason: false,\n  // 포스트 업로드 실패 사유\n  isAddingPost: false,\n  // 포스트 업로드 중\n  postAdded: false,\n  // 포스트 추가 성공\n  isAddingComment: false,\n  // 댓글 추가 중\n  addCommentErrorReason: '',\n  // 댓글 추가 실패 사유\n  commentAdded: false // 댓글 추가 성공\n\n};\nconst dummyPost = {\n  id: 2,\n  User: {\n    id: 1,\n    nickname: 'jaden'\n  },\n  content: 'I am dummy ~',\n  Comments: []\n};\nconst dummyComment = {\n  id: 1,\n  User: {\n    id: 1,\n    nickname: 2\n  },\n  createdAt: '123',\n  content: 'this is dummy comment'\n};\nexport const LOAD_MAIN_POSTS_REQUEST = 'LOAD_MAIN_POSTS_REQUEST';\nexport const LOAD_MAIN_POSTS_FAILURE = 'LOAD_MAIN_POSTS_FAILURE';\nexport const LOAD_MAIN_POSTS_SUCCESS = 'LOAD_MAIN_POSTS_SUCCESS';\nexport const LOAD_HASHTAG_POSTS_REQUEST = 'LOAD_HASHTAG_POSTS_REQUEST';\nexport const LOAD_HASHTAG_POSTS_FAILURE = 'LOAD_HASHTAG_POSTS_FAILURE';\nexport const LOAD_HASHTAG_POSTS_SUCCESS = 'LOAD_HASHTAG_POSTS_SUCCESS';\nexport const LOAD_USER_POSTS_REQUEST = 'LOAD_USER_POSTS_REQUEST';\nexport const LOAD_USER_POSTS_FAILURE = 'LOAD_USER_POSTS_FAILURE';\nexport const LOAD_USER_POSTS_SUCCESS = 'LOAD_USER_POSTS_SUCCESS';\nexport const UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\nexport const UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\nexport const UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\nexport const REMOVE_IMAGE = 'REMOVE_IMAGE';\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const LOAD_COMMENTS_REQUEST = 'LOAD_COMMENTS_REQUEST';\nexport const LOAD_COMMENTS_FAILURE = 'LOAD_COMMENTS_FAILURE';\nexport const LOAD_COMMENTS_SUCCESS = 'LOAD_COMMENTS_SUCCESS';\nexport const RETWEET_REQUEST = 'RETWEET_REQUEST';\nexport const RETWEET_FAILURE = 'RETWEET_FAILURE';\nexport const RETWEET_SUCCESS = 'RETWEET_SUCCESS';\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isAddingPost: true,\n          addPostErrorReason: '',\n          postAdded: false\n        });\n      }\n\n    case ADD_POST_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isAddingPost: false,\n          mainPosts: [dummyPost, ...state.mainPosts],\n          postAdded: true\n        });\n      }\n\n    case ADD_POST_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isAddingPost: false,\n          addPostErrorReason: action.error\n        });\n      }\n\n    case ADD_COMMENT_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isAddingComment: true,\n          addCommentErrorReason: '',\n          commentAdded: false\n        });\n      }\n\n    case ADD_COMMENT_SUCCESS:\n      {\n        console.log(action.data.postId);\n        const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId);\n        console.log(postIndex);\n        const post = state.mainPosts[postIndex];\n        console.log(post);\n        const Comments = [...post.Comments, dummyComment];\n        console.log(Comments);\n        const mainPosts = [...state.mainPosts];\n        mainPosts[postIndex] = _objectSpread({}, post, {\n          Comments\n        });\n        console.log('ADD_COMMENT_SUCCESS22');\n        return _objectSpread({}, state, {\n          isAddingComment: false,\n          mainPosts,\n          commentAdded: true\n        });\n      }\n\n    case ADD_COMMENT_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isAddingComment: false,\n          addCommentErrorReason: action.error\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n});","map":{"version":3,"sources":["/Users/kakao/Desktop/dev/node_bird/nodebird_front/reducers/post.js"],"names":["initialState","mainPosts","id","User","nickname","content","img","Commnets","imagePaths","addPostErrorReason","isAddingPost","postAdded","isAddingComment","addCommentErrorReason","commentAdded","dummyPost","Comments","dummyComment","createdAt","LOAD_MAIN_POSTS_REQUEST","LOAD_MAIN_POSTS_FAILURE","LOAD_MAIN_POSTS_SUCCESS","LOAD_HASHTAG_POSTS_REQUEST","LOAD_HASHTAG_POSTS_FAILURE","LOAD_HASHTAG_POSTS_SUCCESS","LOAD_USER_POSTS_REQUEST","LOAD_USER_POSTS_FAILURE","LOAD_USER_POSTS_SUCCESS","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_FAILURE","UPLOAD_IMAGES_SUCCESS","REMOVE_IMAGE","ADD_POST_REQUEST","ADD_POST_FAILURE","ADD_POST_SUCCESS","LIKE_POST_REQUEST","LIKE_POST_FAILURE","LIKE_POST_SUCCESS","UNLIKE_POST_REQUEST","UNLIKE_POST_FAILURE","UNLIKE_POST_SUCCESS","ADD_COMMENT_REQUEST","ADD_COMMENT_FAILURE","ADD_COMMENT_SUCCESS","LOAD_COMMENTS_REQUEST","LOAD_COMMENTS_FAILURE","LOAD_COMMENTS_SUCCESS","RETWEET_REQUEST","RETWEET_FAILURE","RETWEET_SUCCESS","REMOVE_POST_REQUEST","REMOVE_POST_FAILURE","REMOVE_POST_SUCCESS","state","action","type","error","console","log","data","postId","postIndex","findIndex","v","post"],"mappings":"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","sourcesContent":["export const initialState = {\n    mainPosts: [{\n        id: 1,\n        User:{\n            id: 1,\n            nickname: 'jaden'\n        },\n        content: 'first topic',\n        img: 'https://images.unsplash.com/photo-1576460303646-1b9493abfd35?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=934&q=80',\n        Commnets: [],\n    }],\n    imagePaths: [], // 미리보기 이미지 경로\n    addPostErrorReason: false, // 포스트 업로드 실패 사유\n    isAddingPost: false, // 포스트 업로드 중\n    postAdded: false, // 포스트 추가 성공\n    isAddingComment: false, // 댓글 추가 중\n    addCommentErrorReason: '', // 댓글 추가 실패 사유\n    commentAdded: false, // 댓글 추가 성공\n};\n\nconst dummyPost = {\n    id: 2,\n    User: {\n        id: 1,\n        nickname: 'jaden'\n    },\n    content: 'I am dummy ~',\n    Comments: [],\n};\n\nconst dummyComment = {\n    id: 1,\n    User: {\n        id: 1,\n        nickname: 2,\n    },\n    createdAt: '123',\n    content: 'this is dummy comment'\n};\n\nexport const LOAD_MAIN_POSTS_REQUEST = 'LOAD_MAIN_POSTS_REQUEST';\nexport const LOAD_MAIN_POSTS_FAILURE = 'LOAD_MAIN_POSTS_FAILURE';\nexport const LOAD_MAIN_POSTS_SUCCESS = 'LOAD_MAIN_POSTS_SUCCESS';\n\nexport const LOAD_HASHTAG_POSTS_REQUEST = 'LOAD_HASHTAG_POSTS_REQUEST';\nexport const LOAD_HASHTAG_POSTS_FAILURE = 'LOAD_HASHTAG_POSTS_FAILURE';\nexport const LOAD_HASHTAG_POSTS_SUCCESS = 'LOAD_HASHTAG_POSTS_SUCCESS';\n\nexport const LOAD_USER_POSTS_REQUEST = 'LOAD_USER_POSTS_REQUEST';\nexport const LOAD_USER_POSTS_FAILURE = 'LOAD_USER_POSTS_FAILURE';\nexport const LOAD_USER_POSTS_SUCCESS = 'LOAD_USER_POSTS_SUCCESS';\n\nexport const UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\nexport const UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\nexport const UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\n\nexport const REMOVE_IMAGE = 'REMOVE_IMAGE';\n\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\n\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\n\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\n\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\n\nexport const LOAD_COMMENTS_REQUEST = 'LOAD_COMMENTS_REQUEST';\nexport const LOAD_COMMENTS_FAILURE = 'LOAD_COMMENTS_FAILURE';\nexport const LOAD_COMMENTS_SUCCESS = 'LOAD_COMMENTS_SUCCESS';\n\nexport const RETWEET_REQUEST = 'RETWEET_REQUEST';\nexport const RETWEET_FAILURE = 'RETWEET_FAILURE';\nexport const RETWEET_SUCCESS = 'RETWEET_SUCCESS';\n\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_POST_REQUEST: {\n            return {\n                ...state,\n                isAddingPost: true,\n                addPostErrorReason: '',\n                postAdded: false,\n            };\n        }\n        case ADD_POST_SUCCESS: {\n            return {\n                ...state,\n                isAddingPost: false,\n                mainPosts: [dummyPost ,...state.mainPosts],\n                postAdded: true,\n            };\n        }\n        case ADD_POST_FAILURE: {\n            return {\n                ...state,\n                isAddingPost: false,\n                addPostErrorReason: action.error,\n            };\n        }\n        case ADD_COMMENT_REQUEST: {\n            return {\n                ...state,\n                isAddingComment: true,\n                addCommentErrorReason: '',\n                commentAdded: false,\n            };\n        }\n        case ADD_COMMENT_SUCCESS: {\n            console.log(action.data.postId);\n            const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId);\n            console.log(postIndex);\n            const post = state.mainPosts[postIndex];\n            console.log(post);\n            const Comments = [...post.Comments, dummyComment];\n            console.log(Comments);\n            const mainPosts = [...state.mainPosts];\n            mainPosts[postIndex] = {...post, Comments};\n            console.log('ADD_COMMENT_SUCCESS22');\n            return {\n                ...state,\n                isAddingComment: false,\n                mainPosts,\n                commentAdded: true,\n            };\n        }\n        case ADD_COMMENT_FAILURE: {\n            return {\n                ...state,\n                isAddingComment: false,\n                addCommentErrorReason: action.error,\n            };\n        }\n        default: {\n            return {\n                ...state,\n            };\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}