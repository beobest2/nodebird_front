{"ast":null,"code":"import { all, delay, fork, put, takeLatest, call } from 'redux-saga/effects';\nimport { ADD_COMMENT_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS } from '../reducers/post';\nimport axios from 'axios';\n\nfunction addPostAPI(postData) {\n  return axios.post('/post', postData, {\n    withCredentials: true\n  });\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction addCommentAPI() {}\n\nfunction* addComment(action) {\n  yield delay(1000);\n  yield put({\n    type: ADD_COMMENT_SUCCESS,\n    data: {\n      postId: action.data.postId\n    }\n  }); // try {\n  //   yield delay(1000);\n  //   yield put({\n  //     type: ADD_COMMENT_SUCCESS,\n  //     data: {\n  //       postId: action.data.postId,\n  //     },\n  //   });\n  // } catch (e) {\n  //   yield put({\n  //     type: ADD_COMMENT_FAILURE,\n  //     error: e,\n  //   });\n  // }\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchLoadPosts), fork(watchAddPost), fork(watchAddComment)]);\n}","map":{"version":3,"sources":["C:/Users/hw/Desktop/react_basic/nodebird/nodebird_front/sagas/post.js"],"names":["all","delay","fork","put","takeLatest","call","ADD_COMMENT_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","axios","addPostAPI","postData","post","withCredentials","addPost","action","result","data","type","e","error","watchAddPost","addCommentAPI","addComment","postId","watchAddComment","postSaga","watchLoadPosts"],"mappings":"AAAA,SAASA,GAAT,EAAcC,KAAd,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,UAAhC,EAA4CC,IAA5C,QAAwD,oBAAxD;AACA,SACEC,mBADF,EAEEC,mBAFF,EAGEC,mBAHF,EAIEC,gBAJF,EAKEC,gBALF,EAMEC,gBANF,QAOO,kBAPP;AAQA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,UAAT,CAAoBC,QAApB,EAA8B;AAC5B,SAAOF,KAAK,CAACG,IAAN,CAAW,OAAX,EAAoBD,QAApB,EAA8B;AACnCE,IAAAA,eAAe,EAAE;AADkB,GAA9B,CAAP;AAGD;;AAED,UAAUC,OAAV,CAAkBC,MAAlB,EAA0B;AACxB,MAAI;AACF,UAAMC,MAAM,GAAG,MAAMd,IAAI,CAACQ,UAAD,EAAaK,MAAM,CAACE,IAApB,CAAzB;AACA,UAAMjB,GAAG,CAAC;AACRkB,MAAAA,IAAI,EAAEV,gBADE;AAERS,MAAAA,IAAI,EAAED,MAAM,CAACC;AAFL,KAAD,CAAT;AAID,GAND,CAME,OAAOE,CAAP,EAAU;AACV,UAAMnB,GAAG,CAAC;AACRkB,MAAAA,IAAI,EAAEZ,gBADE;AAERc,MAAAA,KAAK,EAAED;AAFC,KAAD,CAAT;AAID;AACF;;AAED,UAAUE,YAAV,GAAyB;AACrB,QAAMpB,UAAU,CAACM,gBAAD,EAAmBO,OAAnB,CAAhB;AACH;;AAED,SAASQ,aAAT,GAAyB,CAExB;;AAED,UAAUC,UAAV,CAAqBR,MAArB,EAA6B;AAC3B,QAAMjB,KAAK,CAAC,IAAD,CAAX;AACE,QAAME,GAAG,CAAC;AACRkB,IAAAA,IAAI,EAAEb,mBADE;AAERY,IAAAA,IAAI,EAAE;AACJO,MAAAA,MAAM,EAAET,MAAM,CAACE,IAAP,CAAYO;AADhB;AAFE,GAAD,CAAT,CAFyB,CAS3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AAED,UAAUC,eAAV,GAA4B;AAC1B,QAAMxB,UAAU,CAACG,mBAAD,EAAsBmB,UAAtB,CAAhB;AACD;;AAED,eAAe,UAAUG,QAAV,GAAqB;AAClC,QAAM7B,GAAG,CAAC,CACRE,IAAI,CAAC4B,cAAD,CADI,EAER5B,IAAI,CAACsB,YAAD,CAFI,EAGRtB,IAAI,CAAC0B,eAAD,CAHI,CAAD,CAAT;AAKD","sourcesContent":["import { all, delay, fork, put, takeLatest, call } from 'redux-saga/effects';\r\nimport {\r\n  ADD_COMMENT_FAILURE,\r\n  ADD_COMMENT_REQUEST,\r\n  ADD_COMMENT_SUCCESS,\r\n  ADD_POST_FAILURE,\r\n  ADD_POST_REQUEST,\r\n  ADD_POST_SUCCESS,\r\n} from '../reducers/post';\r\nimport axios from 'axios';\r\n\r\nfunction addPostAPI(postData) {\r\n  return axios.post('/post', postData, {\r\n    withCredentials: true,\r\n  });\r\n}\r\n\r\nfunction* addPost(action) {\r\n  try {\r\n    const result = yield call(addPostAPI, action.data);\r\n    yield put({\r\n      type: ADD_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    yield put({\r\n      type: ADD_POST_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchAddPost() {\r\n    yield takeLatest(ADD_POST_REQUEST, addPost);\r\n}\r\n\r\nfunction addCommentAPI() {\r\n\r\n}\r\n\r\nfunction* addComment(action) {\r\n  yield delay(1000);\r\n    yield put({\r\n      type: ADD_COMMENT_SUCCESS,\r\n      data: {\r\n        postId: action.data.postId,\r\n      },\r\n    });\r\n\r\n  // try {\r\n  //   yield delay(1000);\r\n  //   yield put({\r\n  //     type: ADD_COMMENT_SUCCESS,\r\n  //     data: {\r\n  //       postId: action.data.postId,\r\n  //     },\r\n  //   });\r\n  // } catch (e) {\r\n  //   yield put({\r\n  //     type: ADD_COMMENT_FAILURE,\r\n  //     error: e,\r\n  //   });\r\n  // }\r\n}\r\n\r\nfunction* watchAddComment() {\r\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\r\n}\r\n\r\nexport default function* postSaga() {\r\n  yield all([\r\n    fork(watchLoadPosts),\r\n    fork(watchAddPost),\r\n    fork(watchAddComment),\r\n  ]);\r\n}"]},"metadata":{},"sourceType":"module"}