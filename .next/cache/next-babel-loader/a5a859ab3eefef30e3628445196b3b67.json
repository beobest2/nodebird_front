{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hw\\\\Desktop\\\\react_basic\\\\nodebird\\\\nodebird_front\\\\components\\\\PostForm.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useState, useEffect } from 'react';\nimport { Input, Button, Form } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ADD_POST_REQUEST } from '../reducers/post';\n\nvar PostForm = function PostForm() {\n  var dispatch = useDispatch();\n\n  var _useState = useState(''),\n      text = _useState[0],\n      setText = _useState[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      imagePaths = _useSelector.imagePaths,\n      isAddingPost = _useSelector.isAddingPost,\n      postAdded = _useSelector.postAdded;\n\n  useEffect(function () {\n    setText('');\n  }, [postAdded === true]);\n  var onSubmitForm = useCallback(function (e) {\n    e.preventDefault();\n\n    if (!text) {\n      alert('please write contents');\n    }\n\n    dispatch({\n      type: ADD_POST_REQUEST,\n      data: {\n        content: text\n      }\n    });\n  }, [text]);\n  var onChangeText = useCallback(function (e) {\n    setText(e.target.value);\n  }, []);\n  return __jsx(Form, {\n    style: {\n      margin: '10px 0 120px'\n    },\n    encType: \"multipart/form-data\",\n    onSubmit: onSubmitForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, __jsx(Input.TextArea, {\n    maxLength: 140,\n    placeholder: \"what funny things happened ?\",\n    value: text,\n    onChange: onChangeText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    type: \"file\",\n    multiple: true,\n    hidden: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), __jsx(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"upload image\"), __jsx(Button, {\n    type: \"primary\",\n    style: {\n      \"float\": 'right'\n    },\n    htmlType: \"submit\",\n    loading: isAddingPost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"post\")), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, imagePaths.map(function (v) {\n    return __jsx(\"div\", {\n      key: v,\n      style: {\n        display: 'inline-block'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      src: \"http://localhost:3065/\".concat(v),\n      style: {\n        width: '200px'\n      },\n      alt: v,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, __jsx(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"delete\")));\n  })));\n};\n\nexport default PostForm;","map":{"version":3,"sources":["C:/Users/hw/Desktop/react_basic/nodebird/nodebird_front/components/PostForm.js"],"names":["React","useCallback","useState","useEffect","Input","Button","Form","useSelector","useDispatch","ADD_POST_REQUEST","PostForm","dispatch","text","setText","state","post","imagePaths","isAddingPost","postAdded","onSubmitForm","e","preventDefault","alert","type","data","content","onChangeText","target","value","margin","map","v","display","width"],"mappings":"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","sourcesContent":["import React, { useCallback, useState, useEffect } from 'react';\r\nimport { Input, Button, Form } from 'antd';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { ADD_POST_REQUEST } from '../reducers/post';\r\n\r\nconst PostForm = () => {\r\n    const dispatch =  useDispatch();\r\n    const [text, setText] = useState('');\r\n    const { imagePaths, isAddingPost, postAdded } = useSelector(state => state.post);\r\n\r\n    useEffect(() => {\r\n        setText('');\r\n    }, [postAdded === true]);\r\n    \r\n    const onSubmitForm = useCallback((e) => {\r\n        e.preventDefault();\r\n        if (!text){\r\n            alert('please write contents');\r\n        }\r\n        dispatch({\r\n            type: ADD_POST_REQUEST,\r\n            data: {\r\n                content: text,\r\n            }\r\n        })    \r\n    }, [text]);\r\n\r\n    const onChangeText = useCallback((e) => {\r\n        setText(e.target.value);\r\n    }, []);\r\n\r\n    return (\r\n        <Form style={{margin: '10px 0 120px'}} encType=\"multipart/form-data\" onSubmit={onSubmitForm}>\r\n            <Input.TextArea maxLength={140} placeholder=\"what funny things happened ?\" value={text} onChange={onChangeText}/>\r\n            <div>\r\n                <input type=\"file\" multiple hidden />\r\n                <Button>upload image</Button>\r\n                <Button type=\"primary\" style={{float: 'right'}} htmlType=\"submit\" loading={isAddingPost}>post</Button>\r\n            </div>\r\n            <div>\r\n                {imagePaths.map((v) => (\r\n                    <div  key={v} style={{display:'inline-block'}}>\r\n                        <img src={`http://localhost:3065/${v}`} style={{width: '200px'}} alt = {v} />\r\n                        <div>\r\n                            <Button>delete</Button>\r\n                        </div>\r\n                    </div>)\r\n                )}\r\n            </div>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default PostForm;"]},"metadata":{},"sourceType":"module"}