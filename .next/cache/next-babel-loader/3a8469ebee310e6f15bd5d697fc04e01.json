{"ast":null,"code":"import { all, call, put, fork, delay, takeEvery } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { LOAD_USER_SUCCESS, LOAD_USER_FAILURE, LOAD_USER_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, LOG_OUT_REQUEST, SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS } from '../reducers/user';\naxios.defaults.baseURL = 'http://localhost:3065/api'; // login pattern\n\nfunction logInAPI(logInData) {\n  // 서버에 요청을 보내는 부분\n  console.log('server login ~');\n  return axios.post('/user/login', logInData, {\n    withCredentials: true\n  });\n}\n\nfunction* logIn(action) {\n  try {\n    console.log(action.data);\n    const result = yield call(logInAPI, action.data);\n    console.log(result.data);\n    yield put({\n      //디스패치와 동일\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: LOG_IN_FAILURE\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeEvery(LOG_IN_REQUEST, logIn);\n} // signUp pattern\n\n\nfunction signUpAPI(signUpData) {\n  console.log('signUpAPI');\n  return axios.post('/user', signUpData);\n}\n\nfunction* signUp(action) {\n  try {\n    yield call(signUpAPI, action.data);\n    yield delay(2000); //throw new Error('에러에러에러');\n\n    yield put({\n      // put은 dispatch 동일\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (e) {\n    // signup 실패\n    console.log('!!!!');\n    console.error(e);\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchSignUp() {\n  yield takeEvery(SIGN_UP_REQUEST, signUp);\n} // logOut pattern\n\n\nfunction logOutAPI() {\n  console.log('logOutAPI');\n  return axios.post('/user/logout', {}, {\n    withCredentials: true\n  });\n}\n\nfunction* logOut(action) {\n  try {\n    yield call(logOutAPI, action.data);\n    yield delay(2000); //throw new Error('에러에러에러');\n\n    yield put({\n      // put은 dispatch 동일\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (e) {\n    // logOut 실패\n    console.error(e);\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchLogOut() {\n  yield takeEvery(LOG_OUT_REQUEST, logOut);\n} // loadUser pattern\n\n\nfunction loadUserAPI() {\n  console.log('loadUserAPI');\n  return axios.get('/user/', {\n    withCredentials: true\n  });\n}\n\nfunction* loadUser() {\n  try {\n    yield call(loadUserAPI); //throw new Error('에러에러에러');\n\n    yield put({\n      // put은 dispatch 동일\n      type: LOAD_USER_SUCCESS\n    });\n  } catch (e) {\n    // logOut 실패\n    console.error(e);\n    yield put({\n      type: LOAD_USER_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchLoadUser() {\n  yield takeEvery(LOAD_USER_REQUEST, loadUser);\n}\n\nexport default function* userSagar() {\n  yield all([fork(watchLogIn), fork(watchLogOut), fork(watchLoadUser), fork(watchSignUp)]);\n}","map":{"version":3,"sources":["/Users/kakao/Desktop/dev/node_bird/nodebird_front/sagas/user.js"],"names":["all","call","put","fork","delay","takeEvery","axios","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","LOAD_USER_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_IN_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","LOG_OUT_REQUEST","SIGN_UP_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","defaults","baseURL","logInAPI","logInData","console","log","post","withCredentials","logIn","action","data","result","type","e","error","watchLogIn","signUpAPI","signUpData","signUp","watchSignUp","logOutAPI","logOut","watchLogOut","loadUserAPI","get","loadUser","watchLoadUser","userSagar"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,IAAzB,EAA+BC,KAA/B,EAAsCC,SAAtC,QAAuD,oBAAvD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SACIC,iBADJ,EAEIC,iBAFJ,EAGIC,iBAHJ,EAIIC,cAJJ,EAKIC,cALJ,EAMIC,cANJ,EAOIC,eAPJ,EAQIC,eARJ,EASIC,eATJ,EAUIC,eAVJ,EAWIC,eAXJ,EAYIC,eAZJ,QAaO,kBAbP;AAeAZ,KAAK,CAACa,QAAN,CAAeC,OAAf,GAAyB,2BAAzB,C,CAEA;;AAEA,SAASC,QAAT,CAAkBC,SAAlB,EAA6B;AACzB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,SAAOlB,KAAK,CAACmB,IAAN,CAAW,aAAX,EAA0BH,SAA1B,EAAqC;AACxCI,IAAAA,eAAe,EAAE;AADuB,GAArC,CAAP;AAGH;;AAED,UAAUC,KAAV,CAAgBC,MAAhB,EAAwB;AACpB,MAAI;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYI,MAAM,CAACC,IAAnB;AACA,UAAMC,MAAM,GAAG,MAAM7B,IAAI,CAACoB,QAAD,EAAWO,MAAM,CAACC,IAAlB,CAAzB;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAYM,MAAM,CAACD,IAAnB;AACA,UAAM3B,GAAG,CAAC;AAAE;AACR6B,MAAAA,IAAI,EAAErB,cADA;AAENmB,MAAAA,IAAI,EAAEC,MAAM,CAACD;AAFP,KAAD,CAAT;AAIH,GARD,CAQE,OAAOG,CAAP,EAAU;AACRT,IAAAA,OAAO,CAACU,KAAR,CAAcD,CAAd;AACA,UAAM9B,GAAG,CAAC;AACN6B,MAAAA,IAAI,EAAEpB;AADA,KAAD,CAAT;AAGH;AACJ;;AAED,UAAUuB,UAAV,GAAuB;AACnB,QAAM7B,SAAS,CAACO,cAAD,EAAiBe,KAAjB,CAAf;AACH,C,CAED;;;AAEA,SAASQ,SAAT,CAAmBC,UAAnB,EAA+B;AAC3Bb,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA,SAAOlB,KAAK,CAACmB,IAAN,CAAW,OAAX,EAAoBW,UAApB,CAAP;AACH;;AAED,UAAUC,MAAV,CAAiBT,MAAjB,EAAyB;AACrB,MAAI;AACA,UAAM3B,IAAI,CAACkC,SAAD,EAAYP,MAAM,CAACC,IAAnB,CAAV;AACA,UAAMzB,KAAK,CAAC,IAAD,CAAX,CAFA,CAGA;;AACA,UAAMF,GAAG,CAAC;AAAE;AACR6B,MAAAA,IAAI,EAAEb;AADA,KAAD,CAAT;AAGH,GAPD,CAOE,OAAOc,CAAP,EAAU;AAAE;AACVT,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAD,IAAAA,OAAO,CAACU,KAAR,CAAcD,CAAd;AACA,UAAM9B,GAAG,CAAC;AACN6B,MAAAA,IAAI,EAAEf,eADA;AAENiB,MAAAA,KAAK,EAAED;AAFD,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUM,WAAV,GAAwB;AACpB,QAAMjC,SAAS,CAACY,eAAD,EAAkBoB,MAAlB,CAAf;AACH,C,CAED;;;AACA,SAASE,SAAT,GAAqB;AACjBhB,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA,SAAOlB,KAAK,CAACmB,IAAN,CAAW,cAAX,EAA2B,EAA3B,EAA+B;AAClCC,IAAAA,eAAe,EAAE;AADiB,GAA/B,CAAP;AAGH;;AAED,UAAUc,MAAV,CAAiBZ,MAAjB,EAAyB;AACrB,MAAI;AACA,UAAM3B,IAAI,CAACsC,SAAD,EAAYX,MAAM,CAACC,IAAnB,CAAV;AACA,UAAMzB,KAAK,CAAC,IAAD,CAAX,CAFA,CAGA;;AACA,UAAMF,GAAG,CAAC;AAAE;AACR6B,MAAAA,IAAI,EAAElB;AADA,KAAD,CAAT;AAGH,GAPD,CAOE,OAAOmB,CAAP,EAAU;AAAE;AACVT,IAAAA,OAAO,CAACU,KAAR,CAAcD,CAAd;AACA,UAAM9B,GAAG,CAAC;AACN6B,MAAAA,IAAI,EAAEjB,eADA;AAENmB,MAAAA,KAAK,EAAED;AAFD,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUS,WAAV,GAAwB;AACpB,QAAMpC,SAAS,CAACU,eAAD,EAAkByB,MAAlB,CAAf;AACH,C,CAED;;;AACA,SAASE,WAAT,GAAuB;AACnBnB,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,SAAOlB,KAAK,CAACqC,GAAN,CAAU,QAAV,EAAoB;AACvBjB,IAAAA,eAAe,EAAE;AADM,GAApB,CAAP;AAGH;;AAED,UAAUkB,QAAV,GAAqB;AACjB,MAAI;AACA,UAAM3C,IAAI,CAACyC,WAAD,CAAV,CADA,CAEA;;AACA,UAAMxC,GAAG,CAAC;AAAE;AACR6B,MAAAA,IAAI,EAAExB;AADA,KAAD,CAAT;AAGH,GAND,CAME,OAAOyB,CAAP,EAAU;AAAE;AACVT,IAAAA,OAAO,CAACU,KAAR,CAAcD,CAAd;AACA,UAAM9B,GAAG,CAAC;AACN6B,MAAAA,IAAI,EAAEvB,iBADA;AAENyB,MAAAA,KAAK,EAAED;AAFD,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUa,aAAV,GAA0B;AACtB,QAAMxC,SAAS,CAACI,iBAAD,EAAoBmC,QAApB,CAAf;AACH;;AAED,eAAe,UAAUE,SAAV,GAAsB;AACjC,QAAM9C,GAAG,CAAC,CACNG,IAAI,CAAC+B,UAAD,CADE,EAEN/B,IAAI,CAACsC,WAAD,CAFE,EAGNtC,IAAI,CAAC0C,aAAD,CAHE,EAIN1C,IAAI,CAACmC,WAAD,CAJE,CAAD,CAAT;AAMH","sourcesContent":["import { all, call, put, fork, delay, takeEvery } from 'redux-saga/effects';\nimport axios from 'axios';\n\nimport { \n    LOAD_USER_SUCCESS, \n    LOAD_USER_FAILURE,\n    LOAD_USER_REQUEST,\n    LOG_IN_SUCCESS, \n    LOG_IN_FAILURE,\n    LOG_IN_REQUEST,\n    LOG_OUT_SUCCESS, \n    LOG_OUT_FAILURE,\n    LOG_OUT_REQUEST,\n    SIGN_UP_FAILURE,\n    SIGN_UP_REQUEST,\n    SIGN_UP_SUCCESS \n} from '../reducers/user';\n\naxios.defaults.baseURL = 'http://localhost:3065/api';\n\n// login pattern\n\nfunction logInAPI(logInData) {\n    // 서버에 요청을 보내는 부분\n    console.log('server login ~');\n    return axios.post('/user/login', logInData, {\n        withCredentials: true,\n    });\n}\n\nfunction* logIn(action) {\n    try {\n        console.log(action.data);\n        const result = yield call(logInAPI, action.data);\n        console.log(result.data);\n        yield put({ //디스패치와 동일\n            type: LOG_IN_SUCCESS,\n            data: result.data,\n        });\n    } catch (e) {\n        console.error(e);\n        yield put({\n            type: LOG_IN_FAILURE\n        });\n    }\n}\n\nfunction* watchLogIn() {\n    yield takeEvery(LOG_IN_REQUEST, logIn);\n}\n\n// signUp pattern\n\nfunction signUpAPI(signUpData) {\n    console.log('signUpAPI');\n    return axios.post('/user', signUpData);\n}\n\nfunction* signUp(action) {\n    try {\n        yield call(signUpAPI, action.data);\n        yield delay(2000);\n        //throw new Error('에러에러에러');\n        yield put({ // put은 dispatch 동일\n            type: SIGN_UP_SUCCESS,\n        });\n    } catch (e) { // signup 실패\n        console.log('!!!!');\n        console.error(e);\n        yield put({\n            type: SIGN_UP_FAILURE,\n            error: e,\n        });\n    }\n}\n\nfunction* watchSignUp() {\n    yield takeEvery(SIGN_UP_REQUEST, signUp);\n}\n\n// logOut pattern\nfunction logOutAPI() {\n    console.log('logOutAPI');\n    return axios.post('/user/logout', {}, {\n        withCredentials: true,\n    });\n}\n\nfunction* logOut(action) {\n    try {\n        yield call(logOutAPI, action.data);\n        yield delay(2000);\n        //throw new Error('에러에러에러');\n        yield put({ // put은 dispatch 동일\n            type: LOG_OUT_SUCCESS,\n        });\n    } catch (e) { // logOut 실패\n        console.error(e);\n        yield put({\n            type: LOG_OUT_FAILURE,\n            error: e,\n        });\n    }\n}\n\nfunction* watchLogOut() {\n    yield takeEvery(LOG_OUT_REQUEST, logOut);\n}\n\n// loadUser pattern\nfunction loadUserAPI() {\n    console.log('loadUserAPI');\n    return axios.get('/user/', {\n        withCredentials: true,\n    });\n}\n\nfunction* loadUser() {\n    try {\n        yield call(loadUserAPI);\n        //throw new Error('에러에러에러');\n        yield put({ // put은 dispatch 동일\n            type: LOAD_USER_SUCCESS,\n        });\n    } catch (e) { // logOut 실패\n        console.error(e);\n        yield put({\n            type: LOAD_USER_FAILURE,\n            error: e,\n        });\n    }\n}\n\nfunction* watchLoadUser() {\n    yield takeEvery(LOAD_USER_REQUEST, loadUser);\n}\n\nexport default function* userSagar() {\n    yield all([\n        fork(watchLogIn),\n        fork(watchLogOut),\n        fork(watchLoadUser),\n        fork(watchSignUp),\n    ]);\n}"]},"metadata":{},"sourceType":"module"}