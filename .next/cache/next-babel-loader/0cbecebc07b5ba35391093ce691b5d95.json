{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst dummyUser = {\n  nickname: 'jaden',\n  Postings: [],\n  Followings: ['yuri', 'mike'],\n  Followers: ['yuri']\n};\nexport const initialState = {\n  isLoggedIn: false,\n  user: null\n};\nexport const LOG_IN = 'LOG_IN'; // action name\n\nexport const LOG_OUT = 'LOG_OUT';\nexport const SIGN_UP = 'SIGN_UP';\nexport const loginAction = {\n  type: LOG_IN\n};\nexport const logoutAction = {\n  type: LOG_OUT\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOG_IN:\n      {\n        return _objectSpread({}, state, {\n          isLoggedIn: true,\n          user: dummyUser\n        });\n      }\n\n    case LOG_OUT:\n      {\n        return _objectSpread({}, state, {\n          isLoggedIn: false,\n          user: null\n        });\n      }\n\n    case SIGN_UP:\n      {\n        return _objectSpread({}, state);\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/kakao/Desktop/dev/react_birld/ch1/frontend/reducers/user.js"],"names":["dummyUser","nickname","Postings","Followings","Followers","initialState","isLoggedIn","user","LOG_IN","LOG_OUT","SIGN_UP","loginAction","type","logoutAction","reducer","state","action"],"mappings":";;;;;;;;;;;;AAAA,MAAMA,SAAS,GAAG;AACdC,EAAAA,QAAQ,EAAE,OADI;AAEdC,EAAAA,QAAQ,EAAE,EAFI;AAGdC,EAAAA,UAAU,EAAE,CAAC,MAAD,EAAS,MAAT,CAHE;AAIdC,EAAAA,SAAS,EAAE,CAAC,MAAD;AAJG,CAAlB;AAOA,OAAO,MAAMC,YAAY,GAAG;AACxBC,EAAAA,UAAU,EAAE,KADY;AAExBC,EAAAA,IAAI,EAAE;AAFkB,CAArB;AAKP,OAAO,MAAMC,MAAM,GAAG,QAAf,C,CAAyB;;AAChC,OAAO,MAAMC,OAAO,GAAI,SAAjB;AACP,OAAO,MAAMC,OAAO,GAAG,SAAhB;AAEP,OAAO,MAAMC,WAAW,GAAG;AACvBC,EAAAA,IAAI,EAAEJ;AADiB,CAApB;AAIP,OAAO,MAAMK,YAAY,GAAG;AACxBD,EAAAA,IAAI,EAAEH;AADkB,CAArB;;AAIP,MAAMK,OAAO,GAAG,CAAEC,KAAK,GAAGV,YAAV,EAAwBW,MAAxB,KAAoC;AAChD,UAAQA,MAAM,CAACJ,IAAf;AACI,SAAKJ,MAAL;AAAa;AACT,iCACOO,KADP;AAEIT,UAAAA,UAAU,EAAE,IAFhB;AAGIC,UAAAA,IAAI,EAAEP;AAHV;AAKH;;AACD,SAAKS,OAAL;AAAc;AACV,iCACOM,KADP;AAEIT,UAAAA,UAAU,EAAE,KAFhB;AAGIC,UAAAA,IAAI,EAAE;AAHV;AAKH;;AACD,SAAKG,OAAL;AAAc;AACV,iCACOK,KADP;AAGH;;AACD;AAAS;AACL,iCACOA,KADP;AAGH;AAxBL;AA0BH,CA3BD;;AA6BA,eAAeD,OAAf","sourcesContent":["const dummyUser = {\n    nickname: 'jaden',\n    Postings: [],\n    Followings: ['yuri', 'mike'], \n    Followers: ['yuri']\n}\n\nexport const initialState = {\n    isLoggedIn: false,\n    user: null,\n};\n\nexport const LOG_IN = 'LOG_IN'; // action name\nexport const LOG_OUT  = 'LOG_OUT'; \nexport const SIGN_UP = 'SIGN_UP';\n\nexport const loginAction = {\n    type: LOG_IN,\n};\n\nexport const logoutAction = {\n    type: LOG_OUT,\n}\n\nconst reducer = ( state = initialState, action)  => {\n    switch (action.type) {\n        case LOG_IN: {\n            return {\n                ...state,\n                isLoggedIn: true,\n                user: dummyUser,\n            }\n        }\n        case LOG_OUT: {\n            return {\n                ...state,\n                isLoggedIn: false,\n                user: null,\n            }\n        }\n        case SIGN_UP: {\n            return {\n                ...state,\n            }\n        }\n        default: {\n            return {\n                ...state,\n            }\n        }\n    }\n};\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}