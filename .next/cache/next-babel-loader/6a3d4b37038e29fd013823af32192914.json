{"ast":null,"code":"var _jsxFileName = \"/Users/kakao/Desktop/dev/react_birld/ch1/frontend/pages/index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Input, Form, Button, Avatar, Card } from 'antd';\nconst dummy = {\n  isLoggedIn: true,\n  imagePaths: [],\n  mainPosts: []\n};\n\nconst Home = () => {\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, dummy.isLoggedIn && __jsx(Form, {\n    encType: \"multipart/form-data\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, __jsx(Input.TextArea, {\n    maxLength: 140,\n    placeholder: \"what funny things happened ?\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    type: \"file\",\n    multiple: true,\n    hidden: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), __jsx(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"upload image\"), __jsx(Button, {\n    type: \"primary\",\n    style: {\n      float: 'right'\n    },\n    htmlType: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"post\")), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, dummy.imagePaths.map((v, i) => {\n    return __jsx(\"div\", {\n      key: v,\n      style: {\n        display: 'inline-block'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      src: 'http://localhost:3065/' + v,\n      style: {\n        width: '200px'\n      },\n      alt: v,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, __jsx(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"delete\")));\n  }))), dummy.mainPosts.map(c => {\n    return __jsx(Card, {\n      key: +c.createdAt,\n      cover: c.img && __jsx(\"img\", {\n        alt: \"example\",\n        src: c.img,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }),\n      actions: [__jsx(Icon, {\n        type: \"retweet\",\n        key: \"retweet\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), __jsx(Icon, {\n        type: \"heart\",\n        key: \"heart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), __jsx(Icon, {\n        type: \"message\",\n        key: \"message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), __jsx(Icon, {\n        type: \"ellipsis\",\n        key: \"ellipsis\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      })],\n      extra: __jsx(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"follow\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, __jsx(Card.Meta, {\n      avartar: __jsx(Avatar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, c.User.nickname[0]),\n      title: c.User.nickname,\n      description: c.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }));\n  }));\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/kakao/Desktop/dev/react_birld/ch1/frontend/pages/index.js"],"names":["React","Input","Form","Button","Avatar","Card","dummy","isLoggedIn","imagePaths","mainPosts","Home","float","map","v","i","display","width","c","createdAt","img","User","nickname","content"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Input, Form, Button, Avatar, Card } from 'antd';\n\nconst dummy = {\n    isLoggedIn: true,\n    imagePaths: [],\n    mainPosts: [],\n};\n\nconst Home = () => {\n    return (\n        <div>\n            {dummy.isLoggedIn && \n                <Form encType=\"multipart/form-data\">\n                    <Input.TextArea maxLength={140} placeholder=\"what funny things happened ?\" />\n                    <div>\n                        <input type=\"file\" multiple hidden />\n                        <Button>upload image</Button>\n                        <Button type=\"primary\" style={{float: 'right'}} htmlType=\"submit\">post</Button>\n                    </div>\n                    <div>\n                        {dummy.imagePaths.map((v, i) => {\n                            return (\n                                <div  key={v} style={{display:'inline-block'}}>\n                                    <img src={'http://localhost:3065/' + v} style={{width: '200px'}} alt = {v} />\n                                    <div>\n                                        <Button>delete</Button>\n                                    </div>\n                                </div>\n                            )\n                        })}\n                    </div>\n                </Form>\n            }\n            {dummy.mainPosts.map((c) => {\n                return (\n                    <Card\n                        key = {+c.createdAt}\n                        cover = {c.img && <img alt=\"example\" src={c.img} />}\n                        actions = {[\n                            <Icon type=\"retweet\" key=\"retweet\" />,\n                            <Icon type=\"heart\" key=\"heart\" />,\n                            <Icon type=\"message\" key=\"message\" />,\n                            <Icon type=\"ellipsis\" key=\"ellipsis\" />,\n                        ]}\n                        extra={<Button>follow</Button>}\n                    >\n                        <Card.Meta\n                            avartar={<Avatar>{c.User.nickname[0]}</Avatar>}\n                            title={c.User.nickname}\n                            description={c.content}\n                        />\n                    </Card>\n                );\n            })}\n        </div>\n    );\n};\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}